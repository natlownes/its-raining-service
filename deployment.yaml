apiVersion: apps/v1
kind: Deployment
metadata:
  name: its-raining-service
  labels:
    app: its-raining-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: its-raining-service
  template:
    metadata:
      labels:
        app: its-raining-service
    spec:
      containers:
      - name: its-raining-service
        # Run this image
        image: 10.30.2.110:32000/narf/its-raining-service@sha256:84164c9b713f8fdd4557384da66f2e6c6596ebeead81de6f365b0e7f4af9f947
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: "256Mi"
            cpu: "500m"
          limits:
            cpu: "1"
            memory: "500Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: its-raining-service
  labels:
    app: its-raining-service
spec:
  ports:
  - port: 8080
    protocol: TCP
    name: http
  selector:
    app: its-raining-service
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: its-raining-service-gateway
spec:
  selector:
    istio: ingress # use istio default controller
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "raining.looting.biz"
    #tls:
      #httpsRedirect: true
  - port:
      number: 443
      name: https
      protocol: HTTPS
    tls:
      mode: SIMPLE
      #credentialName: raining-looting-biz-cert
      credentialName: raining-looting-biz-tls
      privateKey: sds
      serverCertificate: sds
    hosts:
    - "raining.looting.biz"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: its-raining-service
spec:
  hosts:
  - "raining.looting.biz"
  gateways:
  - its-raining-service-gateway
  http:
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: its-raining-service
        port:
          number: 8080
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: its-raining-service
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: its-raining-service
  minReplicas: 1
  maxReplicas: 6
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50
  - type: Pods
    pods:
      metric:
        name: packets-per-second
      target:
        type: AverageValue
        averageValue: 1k
  - type: Object
    object:
      metric:
        name: requests-per-second
      describedObject:
        apiVersion: networking.k8s.io/v1beta1
        kind: Ingress
        name: main-route
      target:
        type: Value
        value: 20
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: raining-looting-biz-cert
  namespace: istio-system
spec:
  # Secret names are always required.
  secretName: raining-looting-biz-tls

  # Secret template is optional. If set, these annotations
  # and labels will be copied to the secret named example-com-tls.

  # Note: Labels and annotations from the template are only synced to the Secret at the time when the certificate
  # is created or renewed. Currently labels and annotations can only be added, but not removed. Removing any
  # labels or annotations from the template or removing the template itself will have no effect.
  # See https://github.com/jetstack/cert-manager/issues/4292.
  #secretTemplate:
    #annotations:
      #my-secret-annotation-1: "foo"
      #my-secret-annotation-2: "bar"
    #labels:
      #my-secret-label: foo

  duration: 2160h # 90d
  renewBefore: 360h # 15d
  subject:
    organizations:
      - looting.biz
  # The use of the common name field has been deprecated since 2000 and is
  # discouraged from being used.
  #commonName: example.com
  isCA: false
  #privateKey:
    #algorithm: RSA
    #encoding: PKCS1
    #size: 2048
  usages:
    - server auth
    - client auth
  # At least one of a DNS Name, URI, or IP address is required.
  dnsNames:
    - raining.looting.biz
  #uris:
    #- spiffe://cluster.local/ns/sandbox/sa/example
  #ipAddresses:
    #- 192.168.0.5
  # Issuer references are always required.
  issuerRef:
    name: letsencrypt
    # We can reference ClusterIssuers by changing the kind here.
    # The default value is Issuer (i.e. a locally namespaced Issuer)
    kind: ClusterIssuer
    # This is optional since cert-manager will default to this value however
    # if you are using an external issuer, change this to that issuer group.
    #group: cert-manager.io
